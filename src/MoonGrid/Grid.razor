@typeparam TItem

<link href="/_content/MoonGrid/MoonGrid.bundle.scp.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">

@if (IsInDetailMode)
{
    <CascadingValue Value="CurrentRow">
        <CascadingValue Value="ActionLauncher">
            @DetailsTemplate
        </CascadingValue>
    </CascadingValue>
}
else
{
    <div class="row" id="@Id">

        <div class="col-auto row-cols-auto moongrid-action-bar">

            @if (ShowAddNewButton)
            {
                <button type="button" class="btn btn-primary mr-2 me-2 my-2@(SmallButtons ? " btn-sm" : "")" @onclick="OnNewButtonActivated" style="vertical-align:top;">
                    @if (NewButtonTemplate == null)
                    {
                        @AddNewButtonText
                    }
                    else
                    {
                        @NewButtonTemplate
                    }
                </button>
            }

            @if (OrderOptions.Count() > 0)
            {
                <span class="mr-1 me-1" style="display:inline-block">
                    <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-sort-alpha-down" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M10.082 5.629L9.664 7H8.598l1.789-5.332h1.234L13.402 7h-1.12l-.419-1.371h-1.781zm1.57-.785L11 2.687h-.047l-.652 2.157h1.351z" />
                        <path d="M12.96 14H9.028v-.691l2.579-3.72v-.054H9.098v-.867h3.785v.691l-2.567 3.72v.054h2.645V14zM4.5 2.5a.5.5 0 0 0-1 0v9.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L4.5 12.293V2.5z" />
                    </svg>
                    <select id="currentOrder" class="form-control form-select mr-2 me-2 my-2 pe-5@(SmallButtons ? " btn-sm" : "")" @bind="ActiveOrder" style="display:inline-block;width:auto;">
                        @foreach (var item in OrderOptions)
                        {
                            <option value="@item.Id">@item.DisplayText</option>
                        }
                    </select>
                </span>
            }

            @if (ShowFilterButton)
            {
                @if (!IsFilterActive)
                {
                    <button class="btn btn-secondary@(SmallButtons ? " btn-sm" : "") my-2" data-toggle="collapse" data-bs-toggle="collapse" data-target="#collapse-@Id" data-bs-target="#collapse-@Id" style="vertical-align:top;">
                        @if (IsFilterActive)
                        {
                            <i class="@Localization.FilterEnabledIcon"></i>
                        }
                        else
                        {
                            <i class="@Localization.FilterDisabledIcon"></i>
                        }

                        <span class="ml-2 m-2">
                            @Localization.FilterButtonText
                        </span>
                    </button>
                }

                <div id="collapse-@Id" class="collapse my-2">
                    @FilterTemplate
                </div>
            }
        </div>

        @if (ActionButtons.Count > 0 || ActionToolbar != null)
        {
            <div class="col text-md-right text-md-end">
                @foreach (var action in ActionButtons)
                {
                    <button type="button" class="btn btn-secondary my-2 ml-1 ms-1@(SmallButtons ? " btn-sm" : "")" @onclick="@(e => ExecuteActionButton(action))" style="vertical-align:top;">
                        @if (action.ContentTemplate != null)
                        {
                            @action.ContentTemplate
                        }
                        else
                        {
                            @action.Text
                        }
                    </button>
                }

                @if (ActionToolbar != null)
                {
                    <div class="my-2">
                        <CascadingValue Value="@this">
                            @ActionToolbar
                        </CascadingValue>
                    </div>
                }
            </div>
        }
    </div>

    if (!Loading && string.IsNullOrEmpty(ErrorText) && Data.Length == 0 && NoDataTemplate != null)
    {
        <div class="my-2 float-left">
            @NoDataTemplate
        </div>
    }

    else
    {
        <div class="mb-2">
            @if (ListViewTemplate == null)
            {
                <div class="@(UseResponsiveGrid ? "table-responsive" : "row flex-nowrap") no-gutters">
                    <table class="table mr-2 me-2 table-sm moongrid-table@(FreezeFirstColumn ? " mg-table-coolfreeze" : "") @((!Expandable && AdditionalRowTemplate == null) ? " moongrid-table-striped" : "") @(TableClass)" style="font-family:'Lato', sans-serif;">
                        <thead class="@HeaderClass">
                            <tr>
                                @if (Expandable)
                                {
                                    <th></th>
                                }

                                @foreach (var column in Columns)
                                {
                                    var style = ComputeHeaderStyle(column);
                                    var className = ComputeClass(column);
                                    <th style="@style" class="@className">
                                        @column.Title
                                    </th>
                                }
                            </tr>
                        </thead>

                        @if (Loading)
                        {
                            @LoadingTemplate
                        }

                        else if (!string.IsNullOrEmpty(ErrorText))
                        {
                            <tr>
                                <td colspan="@Columns.Count">
                                    @if (ErrorTemplate == null)
                                    {
                                        <div class="text-danger text-center">@ErrorText</div>
                                    }
                                    else
                                    {
                                        @ErrorTemplate(ErrorText)
                                    }
                                </td>
                            </tr>
                        }

                        else
                        {
                            <tbody>
                                @foreach (var row in Data)
                                {
                                    var item = row.Item;
                                    var key = row.Key;
                                    <tr @key=key id="@key">
                                        @if (Expandable)
                                        {
                                            <td>
                                                @if (row.Expanded)
                                                {
                                                    <i class="fas fa-chevron-up" @onclick="@(() => ContractItem(row))"></i>
                                                }
                                                else
                                                {
                                                    <i class="fas fa-chevron-down" @onclick="@(() => ExpandItem(row))"></i>
                                                }
                                            </td>
                                        }

                                        @foreach (var column in Columns)
                                        {
                                            var style = ComputeStyle(column, item);
                                            var className = ComputeClass(column, CellClass);

                                            @if (column.Template == null)
                                            {
                                                <td style="@style" class="@className">
                                                    @column.Source.Invoke(item)
                                                </td>
                                            }
                                            else
                                            {
                                                RenderFragment renderFragment = (builder) => { builder.OpenComponent(0, column.Template); builder.CloseComponent(); };
                                                <td style="@style" class="@className">
                                                    <CascadingValue Value="@item">
                                                        <CascadingValue Value="ActionLauncher">
                                                            @renderFragment
                                                        </CascadingValue>
                                                    </CascadingValue>
                                                </td>
                                            }
                                        }
                                    </tr>

                                    @if (AdditionalRowTemplate != null)
                                    {
                                        <tr>
                                            <td colspan="@(row.Expanded ? Columns.Count + 1 : Columns.Count)" class="moongrid-additional-row">
                                                @AdditionalRowTemplate(item)
                                            </td>
                                        </tr>
                                    }
                                    else if (row.Expanded)
                                    {
                                        <tr>
                                            <td colspan="@(row.Expanded ? Columns.Count + 1 : Columns.Count)" class="moongrid-additional-row">
                                                <CascadingValue Value="@this">
                                                    @row.Content
                                                </CascadingValue>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                            @if (Data.Length > 0 && ShowTableFooter)
                            {
                                <tfoot>
                                    <tr>
                                        @foreach (var column in Columns)
                                        {
                                            var style = ComputeHeaderStyle(column);
                                            var className = ComputeClass(column);
                                            <th style="@style" class="@className">
                                                @column.Title
                                            </th>
                                        }
                                    </tr>
                                </tfoot>
                            }
                        }
                    </table>
                </div>
            }
            else
            {
                @if (Loading)
                {
                    @LoadingTemplate
                }

                else if (!string.IsNullOrEmpty(ErrorText))
                {
                    @if (ErrorTemplate == null)
                    {
                        <p class="text-danger text-center">@ErrorText</p>
                    }
                    else
                    {
                        @ErrorTemplate(ErrorText)
                    }
                }

                else
                {
                    @foreach (var row in Data)
                    {
                        var item = row.Item;
                        var key = row.Key;
                        <div @key=key>
                            @ListViewTemplate(item)
                        </div>
                    }
                }
            }
        </div>
    }

    @if (Data.Length > 0 && IsPageable)
    {
        <div class="row my-1">
            <div class="col-auto">
                <div class="moongrid-pagesize">
                    @if (CanChangePageSize)
                    {
                        <label for="pagecount">@Localization.ItemsPerPage</label>
                        <select id="pagecount" class="ml-2 ms-2 form-control form-select" style="display:inline;width:5rem;box-shadow:none;" @bind="ActivePageSize">
                            @foreach (var pageSize in PageSizes.OrderBy(x => x))
                            {
                                <option value="@pageSize">@pageSize</option>
                            }
                        </select>
                    }
                </div>
            </div>

            <div class="col-sm">
                <ul class="pagination moongrid-pager justify-content-md-end mt-2 mt-sm-0">
                    <li class="page-item@(_pageNumber <= 1 ? " disabled" : "")">
                        <div class="page-link mg-pager-button text-nowrap moongrid-pager-back" @onclick="MoveBack">
                            <i class="fas fa-chevron-left mr-2 me-2"></i> @Localization.PreviousButtonText
                        </div>
                    </li>
                    <li class="page-item disabled">
                        <div class="page-link text-nowrap moongrid-pager-number">
                            @(string.Format(Localization.PageNumberText, _pageNumber))
                        </div>
                    </li>
                    <li class="page-item@(!HasMoreData ? " disabled" : "")">
                        <div class="page-link mg-pager-button text-nowrap moongrid-pager-next" @onclick="MoveNext">
                            @Localization.NextButtonText <i class="fas fa-chevron-right ml-2 ms-2"></i>
                        </div>
                    </li>
                </ul>
            </div>
        </div>

        <div style="clear:both" id="@Id-pager"></div>
    }
}
